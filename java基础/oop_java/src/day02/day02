方法：对象的行为（功能）
例如：格子下落（格子的行为）
方法是计算过程的算法，是对对象数据进行计算的方法
 例如：格子下落的算法（格子的行row 加1）
 
 方法的"重载"现象：方法名相同，参数不同的不同方法
 重载方法的调用规则：根据方法名+参数列表识别方法
重载体现了功能的多态性，重载的方法可以相互重用

 方法中的this变量：
 1.this是引用变量，引用调用方法这个对象的自身
 2.this是局部变量，是方法的隐含参数，调用方法的时候是当前对象的引用，隐含传递给this变量
 3.在方法结束后this被回收
 
 注意:this是在方法运行期有效，并且引用调用方法当前对象，当在方法中
 不能区分局部变量和实例变量的时候，就不能省略this
 
对象的方法：表示对象的功能，必须依赖对象而存在

构造器（构造方法）：
用于创建对象，是创建对象的过程
常见的用途是给实例变量赋值（初始化）
构造器可以有参数，参数是创建对象的前提条件
常见的参数是属性的初始值，
构造器的语法：
1.构造器的名字必须与类名相同（包括大小写）
2.不能定义返回值类型（有别于普通方法定义）
3.构造器可以有参数
4.使用new运算调用构造器，参与运算

默认构造器：
1.类一定有构造器
2.如果类中么有声明任何构造器，java编译器会自动添加默认构造器：无参构造器
3.如果声明了构造器，则使用自己定义的构造器，如果需要使用无参的构造器，必须
重新声明一个无参构造器

构造器 == 构造方法  != 方法
方法：是对象的功能，是动作，方法名一般与构造器不同，一定要定义返回值类型
构造器没有返回值类型，使用对象的引用调用对象的方法

练习：
1.创建Point类
	1）提供合理的构造器
	2）提供distance()方法：计算当前点到原点的距离
	3）提供重载的distance():计算两点之间的距离
		distance(int x,int y)
		distance(Point other)
2.创建circle圆类：圆心cennter(Point)和半径r
	1)提供合理的构造器（无参，有参）
	2）提供一个方法，计算圆的面积area  Math.PI
	3)提供一个contains()方法，判断点  是否包含在圆内
		contains(int x,int y)    contains(Point)

方法：
1.方法签名：方法的识别”关键字“
方法签名= 方法名+参数列表
方法重载：方法名一致，方法签名不一致
java中不能存在方法签名相同的签名方法

2.方法的值传递：基于值的传递
基本类型就是值得复制
引用类型的传递就是地址的传递,可以修改原对象

面向对象的三大特征：继承，多态，封装
1.继承：用来表达具体延续的具体概念
	1)子类继承父类的属性和方法（可继承）
	2）构造器不能继承
		1.类一定有构造器
		2.子类构造器中一定会调用父类构造器
		3.子类构造器中，默认在第一行调用父类的构造器
		4.如果父类没有无参构造器，就必须主动使用super()调用父类的有参构造器
		5.所有构造器中都默认有super()





















 