循环体之间的替代
//1.for 循环――>while循环
//while(循环条件){} 等价于  for(;循环条件;){}

//2.while循环――>for循环
//for(初始化表达式;循环条件;递增表达式){循环体}  等价于  初始化表达式；while(循环条件){循环体；递增表达式；}

//3.死循环
//while(true){}
//for(;true;){}
//for(;;){}

4.while()循环――> do{}while();循环     *****
do{循环体}while(循环条件);   等价于  while(true){循环体；if(！循环条件){break;}}

5.双层for循环

循环使用原则：
1.与次数或者个数有关的使用for循环
2.业务条件中在开始时检查循环条件，使用while
3.业务条件中在循环体之后检查循环条件，使用do while
4.业务条件中循环条件在中部检查，使用死循环，配合break   ****
5.如果不确定哪种循环，使用死循环+break  **

字符（char）:单个字符，本质上是一个整数，单引号   *****
字符串（string）:一串字符，本质上是"字符数组"，双引号   ***
"中" == '中'; //编译错误
java是强类型语言，类型不一样，不能比较
字符串比较使用equals()方法（String API）

"==" 地址比较
equals()  内容比较

内存是用来运行程序的，存储空间是用来存放数据的

内存：栈   堆(new)   方法区  常量池     ****

数组： java数组就是对象
对象： 就是现实中存在的东西

Object 一切对象的父类
数组：类型一致的元素按特定顺序排列而成：   一系列类型相同的元素按照特定的顺序排列的组合
1.数组变量：声明方式，初始化方式，变量值修改
声明： 数据类型[] 变量名;   int[] arry;  //int[]是引用类型
数组变量是引用类型的变量，值是地址值，是数组的内存位置    数组变量可以赋值为null

当一个引用变量的值为null时，表示有变量，但变量不可引用任何对象，变量的值为空，变量有值null.
引用对象的值是对象的地址值，可通过地址间接引用对象
创建数组对象：
A. new 数据类型[]{元素0，1.....};    new int[]{1,2,3};
B. 使用长度创建数组 ： new 数据类型[长度];    new int[3];  自动初始化'0'值
C. 静态初始化，相当于A方式的简写，只能用于声明数组变量的同时初始化元素     int[] arr = {1,2,3}; //等价于new int[]{1,2,3};

数组的长度不可改变，length是只读属性，

方法（Method）
1.在业务功能方面：方法是软件的功能，动词       ：检查飞机是否被子弹击中
2.代码层面：利用数据进行计算的算法     检查飞机是否被击中：判断一个点是否在矩形之内

方法声明：3个要素
返回值类型     方法名     参数列表
public static 返回值类型  方法名（参数列表） {方法体}

在坐标定义时，一般将左上顶点定义为原点

方法的业务目的：检查飞机是否被子弹击中
返回值类型：boolean
public static boolean hit(int x1,int y1,int x,int y,int w,int h){
	方法体：算法过程
}
参数列表是算法的前提条件，方法的参数为局部变量，作用域为方法体的范围，离开方法体会被回收







































