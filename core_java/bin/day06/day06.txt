Arrays   数组类
1.Arrays.toString(arr)    将数组连接为字符串，便于输出，不要用来处理太大数组

2.char[] bye = {'b','y','e'};
		System.out.println(bye); //字符数组比较特殊，可以直接作为字符串输出*****
		System.out.println(bye.toString()); //object中的toString()是打印地址的
  对于字符串，System.out.println(Str)   默认调用toString()，打印地址

3.Arrays.equals(arr,arr1)   比较两个数组内容是否相等（长度，元素位置等）

4.Arrays.sort(arr)     数组排序，升序排列

5.Arrays.binarySearch(arr,value)    二分查找法，根据元素查找元素的下标，不能再未排序的数组上查找
如果数组中么有索引元素，此时将该元素插入数组中，返回负数（虚拟插入）
如果所找元素不在数组中，索引值从1开始
如果所找元素在数组之内，索引值从0开始
返回的结果>=0，表示找到了，如果没有找到返回负数

6.Arrays.copyOf(arr,length)   复制得到新数组，可以用来为数组扩容，但新数组不是原来的数组

7.Arrays.fill(arr,value)  数组的填充，填充每一个元素

8.System.arraycopy(src,srcPos,dest,destPos,length)   复制数组，在已经存在的两个数组之间进行元素复制

9.break   跳出分支或循环，结束循环  
continue  结束此次循环，进入下一次循环

10.数组的迭代（遍历）：对数组进行遍历迭代，获取数组中的每一个元素  for循环

11.冒泡排序和选择排序
冒泡排序：  关键数字 arr.leng-1, 外层arr.length-1   内层:arr.length-1-i
for(int i=0;i<arr.length-1;i++){
			for(int j=0;j<arr.length-1-i;j++){
			}
		}
选择排序：  固定数组的一个位置，让此位置与后面位置对应的值一次比较
for(int i=0;i<arr.length-1;i++){
			for(int j=i+1;j<arr.length;j++){
			}
		}

























